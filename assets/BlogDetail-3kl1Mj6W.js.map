{"version":3,"file":"BlogDetail-3kl1Mj6W.js","sources":["../../src/components/layout/SEO.tsx","../../src/components/blog/BlogInteractions.tsx","../../src/components/blog/BlogComments.tsx","../../src/utils/dateFormat.ts","../../src/components/blog/BlogDetail.tsx"],"sourcesContent":["import React, { memo } from 'react';\nimport { Helmet } from 'react-helmet-async';\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  keywords?: string;\n  ogImage?: string;\n  canonical?: string;\n  type?: 'website' | 'article' | 'profile';\n}\n\nconst SEOComponent: React.FC<SEOProps> = ({\n  title,\n  description,\n  keywords,\n  ogImage = '/og-image.png',\n  canonical,\n  type = 'website',\n}) => {\n  const siteTitle = '에멜무지로 | AI 혁신 파트너';\n  const defaultDescription =\n    '기업의 AI 전환을 위한 솔루션 개발, 실전 교육, 전략 컨설팅을 제공합니다. ' +\n    '검증된 방법론과 실전 경험을 바탕으로 귀사의 디지털 혁신을 함께 만들어갑니다.';\n  const defaultKeywords =\n    'AI 도입, AI 컨설팅, AI 교육, 기업 AI, 디지털 전환, AI 솔루션, ' +\n    '머신러닝, 딥러닝, 생성형 AI, Computer Vision, AI 프로젝트, AI 전략';\n\n  const metaDescription = description || defaultDescription;\n  const metaTitle = title ? `${title} | ${siteTitle}` : siteTitle;\n  const metaKeywords = keywords || defaultKeywords;\n\n  return (\n    <Helmet>\n      {/* 기본 메타 태그 */}\n      <title>{metaTitle}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"keywords\" content={metaKeywords} />\n      <meta name=\"author\" content=\"에멜무지로\" />\n\n      {/* Open Graph */}\n      <meta property=\"og:site_name\" content=\"에멜무지로\" />\n      <meta property=\"og:title\" content={metaTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:image\" content={ogImage} />\n      <meta property=\"og:type\" content={type} />\n      {canonical && <meta property=\"og:url\" content={canonical} />}\n\n      {/* Twitter Card */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={metaTitle} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      <meta name=\"twitter:image\" content={ogImage} />\n\n      {/* 추가 메타 태그 */}\n      <meta name=\"robots\" content=\"index, follow\" />\n      <meta name=\"format-detection\" content=\"telephone=no\" />\n      <meta name=\"theme-color\" content=\"#4F46E5\" />\n      <meta name=\"google\" content=\"notranslate\" />\n\n      {/* 언어 설정 */}\n      <html lang=\"ko\" />\n\n      {/* 캐노니컬 URL */}\n      {canonical && <link rel=\"canonical\" href={canonical} />}\n\n      {/* PWA 관련 메타 태그 */}\n      <meta name=\"application-name\" content=\"에멜무지로\" />\n      <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n      <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"default\" />\n      <meta name=\"apple-mobile-web-app-title\" content=\"에멜무지로\" />\n      <meta name=\"mobile-web-app-capable\" content=\"yes\" />\n    </Helmet>\n  );\n};\n\nconst SEO = memo(SEOComponent);\n\nSEO.displayName = 'SEO';\n\nexport default SEO;\n","import React, { useState, useEffect } from 'react';\nimport { Heart, Share2, Bookmark, Link2, Check } from 'lucide-react';\nimport { BlogPost } from '../../types';\nimport logger from '../../utils/logger';\n\ninterface BlogInteractionsProps {\n  post: BlogPost;\n}\n\nconst BlogInteractions: React.FC<BlogInteractionsProps> = ({ post }) => {\n  const [likes, setLikes] = useState(0);\n  const [isLiked, setIsLiked] = useState(false);\n  const [isBookmarked, setIsBookmarked] = useState(false);\n  const [showShareMenu, setShowShareMenu] = useState(false);\n  const [copiedLink, setCopiedLink] = useState(false);\n\n  // Generate unique user ID\n  const getUserId = () => {\n    let userId = localStorage.getItem('userId');\n    if (!userId) {\n      userId = `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      localStorage.setItem('userId', userId);\n    }\n    return userId;\n  };\n\n  // Load interactions from localStorage\n  useEffect(() => {\n    try {\n      const userId = getUserId();\n\n      // Load likes\n      const likesData = localStorage.getItem('postLikes');\n      const postLikes = likesData ? JSON.parse(likesData) : {};\n      const postLikeData = postLikes[post.id] || { count: 0, users: [] };\n      setLikes(postLikeData.count);\n      setIsLiked(postLikeData.users.includes(userId));\n\n      // Load bookmarks\n      const bookmarksData = localStorage.getItem('bookmarks');\n      const bookmarks: Array<{ id: number }> = bookmarksData\n        ? JSON.parse(bookmarksData)\n        : [];\n      setIsBookmarked(bookmarks.some((b) => b.id === post.id));\n    } catch (error) {\n      logger.error('Failed to load interactions:', error);\n      setLikes(0);\n      setIsLiked(false);\n      setIsBookmarked(false);\n    }\n  }, [post.id]);\n\n  // Toggle like\n  const toggleLike = () => {\n    try {\n      const userId = getUserId();\n      const likesData = localStorage.getItem('postLikes');\n      const postLikes = likesData ? JSON.parse(likesData) : {};\n      const postLikeData = postLikes[post.id] || { count: 0, users: [] };\n\n      if (isLiked) {\n        // Unlike\n        postLikeData.count = Math.max(0, postLikeData.count - 1);\n        postLikeData.users = postLikeData.users.filter(\n          (id: string) => id !== userId\n        );\n      } else {\n        // Like\n        postLikeData.count += 1;\n        postLikeData.users.push(userId);\n      }\n\n      postLikes[post.id] = postLikeData;\n      localStorage.setItem('postLikes', JSON.stringify(postLikes));\n\n      setLikes(postLikeData.count);\n      setIsLiked(!isLiked);\n    } catch (error) {\n      logger.error('Failed to toggle like:', error);\n    }\n  };\n\n  // Toggle bookmark\n  const toggleBookmark = () => {\n    try {\n      const bookmarksData = localStorage.getItem('bookmarks');\n      const bookmarks: Array<{\n        id: string | number;\n        title: string;\n        excerpt: string;\n        date?: string;\n        savedAt: string;\n      }> = bookmarksData ? JSON.parse(bookmarksData) : [];\n\n      if (isBookmarked) {\n        // Remove bookmark\n        const filtered = bookmarks.filter((b) => b.id !== post.id);\n        localStorage.setItem('bookmarks', JSON.stringify(filtered));\n      } else {\n        // Add bookmark\n        const bookmark = {\n          id: post.id,\n          title: post.title,\n          excerpt: post.excerpt || post.title,\n          date: post.date,\n          savedAt: new Date().toISOString(),\n        };\n        bookmarks.unshift(bookmark);\n        localStorage.setItem('bookmarks', JSON.stringify(bookmarks));\n      }\n\n      setIsBookmarked(!isBookmarked);\n    } catch (error) {\n      logger.error('Failed to toggle bookmark:', error);\n    }\n  };\n\n  // Share functions\n  const shareUrl = window.location.href;\n  const shareTitle = post.title;\n  const shareText = post.excerpt;\n\n  const shareToKakao = () => {\n    // Note: Kakao SDK would need to be initialized in index.html\n    const kakaoUrl = `https://story.kakao.com/share?url=${encodeURIComponent(shareUrl)}`;\n    window.open(kakaoUrl, '_blank', 'width=500,height=600');\n  };\n\n  const shareToFacebook = () => {\n    const fbUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareUrl)}`;\n    window.open(fbUrl, '_blank', 'width=500,height=600');\n  };\n\n  const shareToTwitter = () => {\n    const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(shareTitle)}&url=${encodeURIComponent(shareUrl)}`;\n    window.open(twitterUrl, '_blank', 'width=500,height=600');\n  };\n\n  const shareToLinkedIn = () => {\n    const linkedInUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(shareUrl)}`;\n    window.open(linkedInUrl, '_blank', 'width=500,height=600');\n  };\n\n  const copyLink = async () => {\n    try {\n      await navigator.clipboard.writeText(shareUrl);\n      setCopiedLink(true);\n      setTimeout(() => setCopiedLink(false), 2000);\n    } catch {\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = shareUrl;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      setCopiedLink(true);\n      setTimeout(() => setCopiedLink(false), 2000);\n    }\n  };\n\n  const nativeShare = async () => {\n    if (navigator.share) {\n      try {\n        await navigator.share({\n          title: shareTitle,\n          text: shareText,\n          url: shareUrl,\n        });\n      } catch {\n        // User cancelled or error - silently handle\n      }\n    } else {\n      setShowShareMenu(true);\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-between py-4 border-y my-8\">\n      <div className=\"flex items-center space-x-4\">\n        {/* Like button */}\n        <button\n          onClick={toggleLike}\n          className={`flex items-center space-x-2 px-3 py-2 rounded-lg transition-colors ${\n            isLiked\n              ? 'bg-red-50 text-red-600'\n              : 'hover:bg-gray-100 text-gray-600'\n          }`}\n        >\n          <Heart className={`w-5 h-5 ${isLiked ? 'fill-current' : ''}`} />\n          <span className=\"font-medium\">{likes}</span>\n        </button>\n\n        {/* Bookmark button */}\n        <button\n          onClick={toggleBookmark}\n          className={`flex items-center space-x-2 px-3 py-2 rounded-lg transition-colors ${\n            isBookmarked\n              ? 'bg-yellow-50 text-yellow-600'\n              : 'hover:bg-gray-100 text-gray-600'\n          }`}\n        >\n          <Bookmark\n            className={`w-5 h-5 ${isBookmarked ? 'fill-current' : ''}`}\n          />\n        </button>\n      </div>\n\n      {/* Share button */}\n      <div className=\"relative\">\n        <button\n          onClick={nativeShare}\n          className=\"flex items-center space-x-2 px-3 py-2 rounded-lg hover:bg-gray-100 text-gray-600\"\n        >\n          <Share2 className=\"w-5 h-5\" />\n          <span className=\"font-medium\">공유</span>\n        </button>\n\n        {/* Share menu */}\n        {showShareMenu && (\n          <>\n            <div\n              className=\"fixed inset-0 z-40\"\n              onClick={() => setShowShareMenu(false)}\n              onKeyDown={(e) => e.key === 'Escape' && setShowShareMenu(false)}\n              role=\"button\"\n              tabIndex={0}\n              aria-label=\"Close share menu\"\n            />\n            <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border z-50\">\n              <button\n                onClick={() => {\n                  shareToKakao();\n                  setShowShareMenu(false);\n                }}\n                className=\"block w-full text-left px-4 py-2 hover:bg-gray-100\"\n              >\n                카카오톡\n              </button>\n              <button\n                onClick={() => {\n                  shareToFacebook();\n                  setShowShareMenu(false);\n                }}\n                className=\"block w-full text-left px-4 py-2 hover:bg-gray-100\"\n              >\n                Facebook\n              </button>\n              <button\n                onClick={() => {\n                  shareToTwitter();\n                  setShowShareMenu(false);\n                }}\n                className=\"block w-full text-left px-4 py-2 hover:bg-gray-100\"\n              >\n                Twitter\n              </button>\n              <button\n                onClick={() => {\n                  shareToLinkedIn();\n                  setShowShareMenu(false);\n                }}\n                className=\"block w-full text-left px-4 py-2 hover:bg-gray-100\"\n              >\n                LinkedIn\n              </button>\n              <button\n                onClick={() => {\n                  copyLink();\n                  setShowShareMenu(false);\n                }}\n                className=\"block w-full text-left px-4 py-2 hover:bg-gray-100 border-t\"\n              >\n                <span className=\"flex items-center\">\n                  {copiedLink ? (\n                    <>\n                      <Check className=\"w-4 h-4 mr-2 text-green-600\" />\n                      복사됨!\n                    </>\n                  ) : (\n                    <>\n                      <Link2 className=\"w-4 h-4 mr-2\" />\n                      링크 복사\n                    </>\n                  )}\n                </span>\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BlogInteractions;\n","import React, { useState, useEffect } from 'react';\nimport { MessageCircle, Send, User, Calendar, ThumbsUp } from 'lucide-react';\nimport logger from '../../utils/logger';\n\ninterface Comment {\n  id: string;\n  postId: string | number;\n  author: string;\n  content: string;\n  date: string;\n  likes: number;\n  likedBy: string[];\n  replies?: Comment[];\n}\n\ninterface BlogCommentsProps {\n  postId: string | number;\n}\n\nconst BlogComments: React.FC<BlogCommentsProps> = ({ postId }) => {\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [newComment, setNewComment] = useState('');\n  const [authorName, setAuthorName] = useState('');\n  const [replyTo, setReplyTo] = useState<string | null>(null);\n  const [replyContent, setReplyContent] = useState('');\n\n  // Generate unique user ID (for demo purposes)\n  const getUserId = () => {\n    let userId = localStorage.getItem('userId');\n    if (!userId) {\n      userId = `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      localStorage.setItem('userId', userId);\n    }\n    return userId;\n  };\n\n  // Load comments from localStorage\n  useEffect(() => {\n    const loadComments = () => {\n      try {\n        const allComments = localStorage.getItem('blogComments');\n        if (allComments) {\n          const parsed = JSON.parse(allComments);\n          setComments(parsed[postId] || []);\n        }\n      } catch (error) {\n        logger.error('Failed to load comments:', error);\n        setComments([]);\n      }\n    };\n\n    loadComments();\n\n    // Load saved author name\n    const savedName = localStorage.getItem('commentAuthorName');\n    if (savedName) {\n      setAuthorName(savedName);\n    }\n  }, [postId]);\n\n  // Save comments to localStorage\n  const saveComments = (updatedComments: Comment[]) => {\n    try {\n      const storedComments = localStorage.getItem('blogComments');\n      const allComments = storedComments ? JSON.parse(storedComments) : {};\n      allComments[postId] = updatedComments;\n      localStorage.setItem('blogComments', JSON.stringify(allComments));\n      setComments(updatedComments);\n    } catch (error) {\n      logger.error('Failed to save comments:', error);\n    }\n  };\n\n  // Add new comment\n  const handleSubmitComment = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!newComment.trim() || !authorName.trim()) return;\n\n    const comment: Comment = {\n      id: `comment_${Date.now()}`,\n      postId,\n      author: authorName,\n      content: newComment,\n      date: new Date().toISOString(),\n      likes: 0,\n      likedBy: [],\n      replies: [],\n    };\n\n    // Save author name for future use\n    localStorage.setItem('commentAuthorName', authorName);\n\n    saveComments([comment, ...comments]);\n    setNewComment('');\n  };\n\n  // Add reply to comment\n  const handleSubmitReply = (commentId: string) => {\n    if (!replyContent.trim() || !authorName.trim()) return;\n\n    const reply: Comment = {\n      id: `reply_${Date.now()}`,\n      postId,\n      author: authorName,\n      content: replyContent,\n      date: new Date().toISOString(),\n      likes: 0,\n      likedBy: [],\n    };\n\n    const updatedComments = comments.map((comment) => {\n      if (comment.id === commentId) {\n        return {\n          ...comment,\n          replies: [...(comment.replies || []), reply],\n        };\n      }\n      return comment;\n    });\n\n    saveComments(updatedComments);\n    setReplyTo(null);\n    setReplyContent('');\n  };\n\n  // Toggle like on comment\n  const toggleLike = (\n    commentId: string,\n    isReply: boolean = false,\n    parentId?: string\n  ) => {\n    const userId = getUserId();\n\n    const updatedComments = comments.map((comment) => {\n      if (!isReply && comment.id === commentId) {\n        const likedBy = comment.likedBy || [];\n        const isLiked = likedBy.includes(userId);\n\n        return {\n          ...comment,\n          likes: isLiked ? comment.likes - 1 : comment.likes + 1,\n          likedBy: isLiked\n            ? likedBy.filter((id) => id !== userId)\n            : [...likedBy, userId],\n        };\n      } else if (isReply && comment.id === parentId) {\n        return {\n          ...comment,\n          replies: comment.replies?.map((reply) => {\n            if (reply.id === commentId) {\n              const likedBy = reply.likedBy || [];\n              const isLiked = likedBy.includes(userId);\n\n              return {\n                ...reply,\n                likes: isLiked ? reply.likes - 1 : reply.likes + 1,\n                likedBy: isLiked\n                  ? likedBy.filter((id) => id !== userId)\n                  : [...likedBy, userId],\n              };\n            }\n            return reply;\n          }),\n        };\n      }\n      return comment;\n    });\n\n    saveComments(updatedComments);\n  };\n\n  // Format date\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diff = now.getTime() - date.getTime();\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n\n    if (days === 0) {\n      const hours = Math.floor(diff / (1000 * 60 * 60));\n      if (hours === 0) {\n        const minutes = Math.floor(diff / (1000 * 60));\n        return minutes === 0 ? '방금 전' : `${minutes}분 전`;\n      }\n      return `${hours}시간 전`;\n    } else if (days < 7) {\n      return `${days}일 전`;\n    } else {\n      return date.toLocaleDateString('ko-KR');\n    }\n  };\n\n  const userId = getUserId();\n\n  return (\n    <div className=\"mt-12\">\n      <h3 className=\"text-2xl font-bold mb-6 flex items-center\">\n        <MessageCircle className=\"mr-2\" />\n        댓글 ({comments.length})\n      </h3>\n\n      {/* Comment form */}\n      <form\n        onSubmit={handleSubmitComment}\n        className=\"mb-8 p-4 bg-gray-50 rounded-lg\"\n      >\n        <div className=\"mb-4\">\n          <input\n            type=\"text\"\n            value={authorName}\n            onChange={(e) => setAuthorName(e.target.value)}\n            placeholder=\"이름\"\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            required\n          />\n        </div>\n        <div className=\"mb-4\">\n          <textarea\n            value={newComment}\n            onChange={(e) => setNewComment(e.target.value)}\n            placeholder=\"댓글을 작성해주세요...\"\n            rows={3}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n        >\n          <Send className=\"w-4 h-4 mr-2\" />\n          댓글 작성\n        </button>\n      </form>\n\n      {/* Comments list */}\n      <div className=\"space-y-6\">\n        {comments.map((comment) => (\n          <div key={comment.id} className=\"bg-white p-4 rounded-lg border\">\n            <div className=\"flex items-start justify-between\">\n              <div className=\"flex-1\">\n                <div className=\"flex items-center mb-2\">\n                  <User className=\"w-4 h-4 mr-2 text-gray-500\" />\n                  <span className=\"font-medium\">{comment.author}</span>\n                  <span className=\"mx-2 text-gray-300\">•</span>\n                  <Calendar className=\"w-4 h-4 mr-1 text-gray-500\" />\n                  <span className=\"text-sm text-gray-500\">\n                    {formatDate(comment.date)}\n                  </span>\n                </div>\n                <p className=\"text-gray-700 mb-3\">{comment.content}</p>\n                <div className=\"flex items-center space-x-4\">\n                  <button\n                    onClick={() => toggleLike(comment.id)}\n                    className={`flex items-center space-x-1 text-sm ${\n                      comment.likedBy?.includes(userId)\n                        ? 'text-blue-600'\n                        : 'text-gray-500 hover:text-blue-600'\n                    }`}\n                  >\n                    <ThumbsUp className=\"w-4 h-4\" />\n                    <span>{comment.likes}</span>\n                  </button>\n                  <button\n                    onClick={() => setReplyTo(comment.id)}\n                    className=\"text-sm text-gray-500 hover:text-blue-600\"\n                  >\n                    답글\n                  </button>\n                </div>\n\n                {/* Reply form */}\n                {replyTo === comment.id && (\n                  <div className=\"mt-4 ml-4 p-3 bg-gray-50 rounded\">\n                    <textarea\n                      value={replyContent}\n                      onChange={(e) => setReplyContent(e.target.value)}\n                      placeholder=\"답글을 작성해주세요...\"\n                      rows={2}\n                      className=\"w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500 mb-2\"\n                    />\n                    <div className=\"flex space-x-2\">\n                      <button\n                        onClick={() => handleSubmitReply(comment.id)}\n                        className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n                      >\n                        답글 작성\n                      </button>\n                      <button\n                        onClick={() => {\n                          setReplyTo(null);\n                          setReplyContent('');\n                        }}\n                        className=\"px-3 py-1 bg-gray-300 text-gray-700 rounded hover:bg-gray-400 text-sm\"\n                      >\n                        취소\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {/* Replies */}\n                {comment.replies && comment.replies.length > 0 && (\n                  <div className=\"mt-4 ml-8 space-y-3\">\n                    {comment.replies.map((reply) => (\n                      <div key={reply.id} className=\"bg-gray-50 p-3 rounded\">\n                        <div className=\"flex items-center mb-1\">\n                          <User className=\"w-3 h-3 mr-1 text-gray-500\" />\n                          <span className=\"font-medium text-sm\">\n                            {reply.author}\n                          </span>\n                          <span className=\"mx-2 text-gray-300\">•</span>\n                          <span className=\"text-xs text-gray-500\">\n                            {formatDate(reply.date)}\n                          </span>\n                        </div>\n                        <p className=\"text-sm text-gray-700 mb-2\">\n                          {reply.content}\n                        </p>\n                        <button\n                          onClick={() => toggleLike(reply.id, true, comment.id)}\n                          className={`flex items-center space-x-1 text-xs ${\n                            reply.likedBy?.includes(userId)\n                              ? 'text-blue-600'\n                              : 'text-gray-500 hover:text-blue-600'\n                          }`}\n                        >\n                          <ThumbsUp className=\"w-3 h-3\" />\n                          <span>{reply.likes}</span>\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {comments.length === 0 && (\n        <p className=\"text-center text-gray-500 py-8\">\n          아직 댓글이 없습니다. 첫 번째 댓글을 작성해보세요!\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default BlogComments;\n","export const formatDate = (dateString: string): string => {\n  const options: Intl.DateTimeFormatOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n  return new Date(dateString).toLocaleDateString('ko-KR', options);\n};\n","import React, { useEffect, memo } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ArrowLeft } from 'lucide-react';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { PageLoading } from '../common/UnifiedLoading';\nimport ErrorBoundary from '../common/ErrorBoundary';\nimport SEO from '../layout/SEO';\nimport BlogInteractions from './BlogInteractions';\nimport BlogComments from './BlogComments';\nimport { useBlog } from '../../contexts/BlogContext';\nimport { formatDate } from '../../utils/dateFormat';\n\nconst BlogDetailPage: React.FC = memo(() => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const {\n    currentPost: post,\n    loading,\n    error,\n    fetchPostById,\n    clearCurrentPost,\n  } = useBlog();\n\n  useEffect(() => {\n    if (id) {\n      fetchPostById(id);\n    }\n    return () => clearCurrentPost();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  if (loading) {\n    return <PageLoading message=\"블로그 포스트를 불러오는 중입니다...\" />;\n  }\n\n  if (error && error.includes('404')) {\n    navigate('/404', { replace: true });\n    return null;\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 pt-20\">\n        <div className=\"max-w-4xl mx-auto px-4 py-12 text-center\">\n          <p className=\"text-red-600\">{error}</p>\n          <button\n            onClick={() => navigate(-1)}\n            className=\"mt-4 text-indigo-600 hover:text-indigo-700\"\n          >\n            뒤로 가기\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ErrorBoundary>\n      <div className=\"min-h-screen bg-gray-50 pt-20\">\n        {post && (\n          <SEO\n            title={`${post.title} | 에멜무지로 블로그`}\n            description={post.excerpt || post.title}\n            keywords={`${post.category}, 에멜무지로, 블로그`}\n            ogImage={post.image_url}\n          />\n        )}\n        <div className=\"max-w-4xl mx-auto px-4 py-12\">\n          <button\n            onClick={() => navigate(-1)}\n            className=\"mb-8 text-indigo-600 hover:text-indigo-700 flex items-center group\"\n          >\n            <ArrowLeft className=\"w-4 h-4 mr-2 group-hover:-translate-x-1 transition-transform\" />\n            뒤로가기\n          </button>\n          <article className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n            {post?.image_url && (\n              <img\n                src={post.image_url}\n                alt={`${post.title} 관련 이미지`}\n                className=\"w-full h-64 object-cover\"\n              />\n            )}\n            <div className=\"p-8\">\n              <div className=\"mb-6\">\n                <span\n                  className=\"inline-block px-3 py-1 text-sm rounded-full mb-4 font-medium\"\n                  style={{\n                    backgroundColor: '#E0E7FF',\n                    color: '#4F46E5',\n                  }}\n                >\n                  {post?.category}\n                </span>\n                <time\n                  dateTime={post?.date}\n                  className=\"text-sm text-gray-500 ml-4\"\n                >\n                  {post?.date && formatDate(post.date)}\n                </time>\n              </div>\n              <h1 className=\"text-3xl font-bold mb-6\">{post?.title}</h1>\n\n              {/* Author and tags */}\n              <div className=\"flex items-center mb-6 text-gray-600\">\n                <span>작성자: {post?.author}</span>\n                {post?.tags && post.tags.length > 0 && (\n                  <>\n                    <span className=\"mx-2\">•</span>\n                    <div className=\"flex gap-2\">\n                      {post.tags.map((tag, index) => (\n                        <span\n                          key={index}\n                          className=\"text-sm bg-gray-100 px-2 py-1 rounded\"\n                        >\n                          #{tag}\n                        </span>\n                      ))}\n                    </div>\n                  </>\n                )}\n              </div>\n\n              {/* Content with Markdown support */}\n              <div className=\"prose prose-indigo max-w-none\">\n                <ReactMarkdown remarkPlugins={[remarkGfm]}>\n                  {post?.content || ''}\n                </ReactMarkdown>\n              </div>\n\n              {/* Like and Share buttons */}\n              {post && <BlogInteractions post={post} />}\n\n              {/* Comments section */}\n              {post && <BlogComments postId={post.id} />}\n            </div>\n          </article>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n});\n\nBlogDetailPage.displayName = 'BlogDetailPage';\n\nexport default BlogDetailPage;\n"],"names":["SEOComponent","title","description","keywords","ogImage","canonical","type","siteTitle","defaultDescription","defaultKeywords","metaDescription","metaTitle","metaKeywords","Helmet","jsx","SEO","memo","BlogInteractions","post","likes","setLikes","useState","isLiked","setIsLiked","isBookmarked","setIsBookmarked","showShareMenu","setShowShareMenu","copiedLink","setCopiedLink","getUserId","userId","useEffect","likesData","postLikeData","bookmarksData","bookmarks","b","error","logger","toggleLike","postLikes","id","toggleBookmark","filtered","bookmark","shareUrl","shareTitle","shareText","shareToKakao","kakaoUrl","shareToFacebook","fbUrl","shareToTwitter","twitterUrl","shareToLinkedIn","linkedInUrl","copyLink","textArea","nativeShare","jsxs","Heart","Bookmark","Share2","Fragment","e","Check","Link2","BlogComments","postId","comments","setComments","newComment","setNewComment","authorName","setAuthorName","replyTo","setReplyTo","replyContent","setReplyContent","allComments","parsed","savedName","saveComments","updatedComments","storedComments","handleSubmitComment","comment","handleSubmitReply","commentId","reply","isReply","parentId","likedBy","formatDate","dateString","date","diff","days","hours","minutes","MessageCircle","Send","User","Calendar","ThumbsUp","options","BlogDetailPage","useParams","navigate","useNavigate","loading","fetchPostById","clearCurrentPost","useBlog","PageLoading","ErrorBoundary","ArrowLeft","tag","index","ReactMarkdown","remarkGfm"],"mappings":"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"}