name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: |
        cd frontend
        npm install

    - name: Run lint
      run: |
        cd frontend
        npm run lint

    - name: Run type check
      run: |
        cd frontend
        npx tsc --noEmit

    - name: Run tests
      run: |
        cd frontend
        CI=true npm test -- --watchAll=false --passWithNoTests --coverage
      env:
        CI: true
      timeout-minutes: 3

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage
        flags: frontend
        name: frontend-coverage

    - name: Build project
      run: |
        cd frontend
        npm run build

    - name: Run E2E tests
      run: |
        cd frontend
        npx playwright install --with-deps
        npm run test:e2e || true
      env:
        CI: true
      continue-on-error: true

  lighthouse:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: |
        cd frontend
        npm install

    - name: Build project
      run: |
        cd frontend
        npm run build

    - name: Run Lighthouse CI
      run: |
        cd frontend
        npm run lighthouse || echo "Lighthouse CI skipped - command not found"
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: |
        cd frontend
        npm install

    - name: Run npm audit
      run: |
        cd frontend
        npm audit --audit-level critical || echo "Audit check completed with warnings"
      continue-on-error: true

    - name: Run Snyk to check for vulnerabilities
      if: ${{ env.SNYK_TOKEN != '' }}
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
        command: test
        directory: frontend/
      continue-on-error: true

  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: |
        cd frontend
        npm install

    - name: Build project
      run: |
        cd frontend
        npm run build

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./frontend/build
        cname: your-domain.com # Optional: replace with your domain