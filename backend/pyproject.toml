[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "emelmujiro-backend"
version = "0.1.0"
description = "Emelmujiro Backend API"
requires-python = ">=3.10"
dependencies = [
    "Django==5.2.6",
    "djangorestframework==3.16.1",
    "django-cors-headers==4.7.0",
    "python-dotenv==1.1.1",
    "requests==2.32.5",
    "Pillow==11.3.0",
    "django-ratelimit==4.1.0",
    "django-extensions==4.1",
    "djangorestframework-simplejwt==5.5.1",
    "ipython==8.37.0",
    "drf-yasg==1.21.10",
    "gunicorn==23.0.0",
    "psycopg2-binary==2.9.10",
    "whitenoise==6.9.0",
]

[project.optional-dependencies]
dev = [
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "pytest>=8.0.0",
    "pytest-django>=4.8.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

[tool.black]
line-length = 120
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 120
skip = ["migrations"]
skip_glob = ["*/migrations/*"]
known_django = ["django", "rest_framework"]
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"

[tool.ruff]
line-length = 120
target-version = "py310"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "B905",  # zip() without explicit strict parameter
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
    ".venv",
    "migrations",
]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
exclude = [
    "migrations/",
    "venv/",
    ".venv/",
]

[tool.setuptools]
packages = ["api", "config"]
py-modules = []

[tool.setuptools.package-find]
where = ["."]
include = ["api*", "config*"]
exclude = ["tests*"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
python_files = ["test_*.py", "*_test.py", "*_tests.py"]
addopts = "-vv --tb=short --strict-markers"
testpaths = ["tests", "api/tests"]